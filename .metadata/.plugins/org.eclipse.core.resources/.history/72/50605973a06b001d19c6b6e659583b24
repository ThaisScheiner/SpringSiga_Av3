package br.edu.fateczl.SpringSiga.controller;

import javax.servlet.http.HttpServlet;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class Servlet_RelatorioFalta 
{
	
	@RequestMapping(name = "relatorioFalta", value = "/relatorioFalta", method = RequestMethod.GET)
	public ModelAndView init(ModelMap model) 
	{
		return new ModelAndView("relatorioFalta");
	}
	
	/*
	private static final long serialVersionUID = 1L;
       
    public Servlet_RelatorioFalta() {
        super();
    }

    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			geraRelatorio(request, response);
		} catch (ClassNotFoundException | ServletException | IOException | SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	private void geraRelatorio(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, ClassNotFoundException, SQLException {
	
		String erro = "";
		String materia = request.getParameter("materias");
		String Jasper = "WEB-INF/report/RelatorioFaltas.jasper";
		
		HashMap<String, Object> param = new HashMap<String, Object>();
		param.put("disciplina", materia);
		
		byte[] bytes = null;
		ServletContext contexto = getServletContext();
		
		try {
			JasperReport relatorio = (JasperReport) JRLoader.loadObjectFromFile(contexto.getRealPath(Jasper));
			bytes = JasperRunManager.runReportToPdf(relatorio, param, new GenericDao().getConnection());
			
		} catch (JRException e) {
			erro = e.getMessage();
			
		} finally {
			if(bytes != null) {
				response.setContentType("application/pdf");
				response.setContentLength(bytes.length);
				ServletOutputStream sos = response.getOutputStream();
				sos.write(bytes);
				sos.flush();
				sos.close();
			}
			else {
				RequestDispatcher rd = request.getRequestDispatcher("google.com");
				request.setAttribute("erro", erro);
				rd.forward(request, response);
			}
			
		}
	}
	
	
	*/
	
}
